plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'signing'
    id 'net.researchgate.release' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.vanniktech.maven.publish' version '0.34.0'
    // id 'org.springframework.boot' version '3.5.5' apply false
}

group = project.findProperty("GROUP") ?: group
version = project.findProperty("VERSION_NAME") ?: version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:3.5.5'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.matching {
    it.name == "bootJar"
}.configureEach {
    enabled = false
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'Springify Multiconfig',
                'Implementation-Version': version
        )
    }
}

mavenPublishing {
    publishToMavenCentral(true)
    signAllPublications()
    pom {
        name = project_name
        description = project_description
        url = project_url
        licenses {
            license {
                name = project_license_slug
                url = project_license_url
            }
        }
        developers {
            developer {
                id = project_developer
                name = project_developer
            }
        }
        scm {
            connection = project_scm
            developerConnection = project_scm
            url = project_url
        }
    }
}

signing {
    def key = findProperty('signingInMemoryKey')
    def keyId = findProperty('signingInMemoryKeyId')
    def keyPass = findProperty('signingInMemoryKeyPassword')
    if (key) {
        useInMemoryPgpKeys(keyId as String, key as String, keyPass as String)
    }
    sign publishing.publications
}

afterReleaseBuild.dependsOn 'publishToMavenCentral'
